version: "1.1"
name: Create User
env:
  host: localhost:3000
  TOKEN: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI2ODk0NTRiMzgwMGQwZDg0YTA0NTg3NGYiLCJ1c2VybmFtZSI6ImtpbWFuZyIsInJvbGUiOiJBZG1pbiIsImlhdCI6MTc1NTg0NjQ1OCwiZXhwIjoxNzU1ODg5NjU4fQ.PQ9kbejU4QE_bWc2pu18ScH9ApYeHxN2bse6OKjsk8k"
config:
  loadTest:
    phases:
      - duration: 2
        arrivalRate: 20 # Requests per 1 second, 2 request
      - duration: 10
        arrivalRate: 2 # 2 requests per 1 second, 20 requests
tests:
  create-user:
    testdata:
      file: test.csv
    steps:
      - name: Login
        http:
          url: http://${{env.host}}/api/auth/login
          method: POST
          check:
            status: /^20/
          json:
            username: ${{testdata.username}}
            password: ${{testdata.password}}
          captures:
            accessToken:
              jsonpath: $.accessToken
      - name: POST user
        http:
          url: http://${{env.host}}/api/users
          method: POST
          auth:
            bearer:
              token: ${{captures.accessToken}}
          json:
            name: ${{ finance.accountName | fake }}
            username: ${{ internet.userName | fake }}
            age: "${{ number.int | fake: {min: 10, max: 100} }}"
            role: "admin"
            email: ${{ internet.email | fake }}
            password: "password123"
          check:
            status: /^20/
  create-user-fail:
    testdata:
      file: test.csv
    steps:
      - name: Login
        http:
          url: http://${{env.host}}/api/auth/login
          method: POST
          check:
            status: /^20/
          json:
            username: ${{testdata.username}}
            password: ${{testdata.password}}
          captures:
            accessToken:
              jsonpath: $.accessToken
      - name: POST user bad data
        http:
          url: http://${{env.host}}/api/users
          method: POST
          auth:
            bearer:
              token: ${{captures.accessToken}}
          json:
            name: ${{ | naughtystring }}
            username: kkk
            age: -15
            role: ${{ | naughtystring }}
            email: ${{ | naughtystring }}
            password: "234"
          check:
            status: /^40/
  create-user-no-body:
    testdata:
      file: test.csv
    steps:
      - name: Login
        http:
          url: http://${{env.host}}/api/auth/login
          method: POST
          check:
            status: /^20/
          json:
            username: ${{testdata.username}}
            password: ${{testdata.password}}
          captures:
            accessToken:
              jsonpath: $.accessToken
      - name: POST user no body
        http:
          url: http://${{env.host}}/api/users
          method: POST
          auth:
            bearer:
              token: ${{captures.accessToken}}
          check:
            status: /^40/